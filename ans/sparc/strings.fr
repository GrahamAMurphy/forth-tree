\ string words
code /string	\ ( c-addr1 u1 n -- c-addr2 u2 )
	ld	[psp+8],t0
	ld	[psp+4],t1
	add	psp,4,psp
	add	t0,tos,t0
	st	t0,[psp+4]
	next1
	next2
	next3
	sub	t1,tos,tos
end

code split	\ ( c-addr1 u1 char -- c-addr2 u2 c-addr1 u3 )
	ld	[psp+8],t5		/* c-addr1: buffer start */
	mov	tos,t3			/* char: delimiter */
	ld	[psp+4],tos		/* u1: buffer length */
	call	scandel			/* scan for delimiter; bl is special */
	mov	%g0,t2			/* initial offset */
	sub	psp,4,psp
	st	t5,[psp+4]		/* c-addr1: parsed string */
	add	t5,t2,t5
	st	t5,[psp+12]		/* c-addr2: remaining string */
	sub	tos,t2,tos
	st	tos,[psp+8]		/* u2: remaining length */
	next1
	next2
	next3
	mov	t1,tos			/* u3: parsed length */
end
