\ (c) 2008 Johns Hopkins University / Applied Physics Laboratory
\ Memory allocator.
hex

\ Configured by total-mem#, a user-supplied value, indicating total memories

\ The allocator "far-allot" keeps the memory pointers aligned.  The
\ pointers are initialized to zero, i.e. they are aligned.  Each
\ allocation aligns the pointer before saving it.  Note: this behavior is
\ different from "allot".

\ Tables of first free locations in each memory, initialized to zero.
create far-mem-set
   total-mem# cells allot
far-mem-set total-mem# cells erase

: far-h		\ ( memid -- addr ) Return the address of the address of
		\ the next free memory location.
   cells far-mem-set + ;

: far-here	\ ( mem -- addr ) Return address of next free location.
   far-h @ ;

: far-allot	\ ( size mem -- addr ) Allocate size bytes from given page.
		\ Pre/post-condition: pointer aligned.
   far-h dup >r @ swap over + aligned r> ! ;
