\ Compile Forth for simulator

" target.fr" used
" Frisc5/16bits" is-target		\ cross compile for 16-bit Frisc5

\ Configure crosscompiler
hex
0 set-ram				\ ram-based system
\ 0 8000 set-rom/ram			\ rom-based system
\ def interactive
def multitasking			\ include multitasker
" newmap" is-logfile

\ Load the kernel.
" kernel1.fr" ftload			\ primitives and extend crosscompiler

\ Load low-level tty code
" intprims.fr" ftload			\ test interrupt support
" intuser.mfr" ftload			\    and cross-compiler
" tty.fr" ftload			\ emit and key through simulator

\ Load the interpreter
" kernel2.fr" ftload			\ interpreter for Forth, processes, etc.
[ifdef] interactive
" fakeio.fr" ftload
[then]

\ ------------------------------------------------------------------------
\ Load application

\ Steal useful I/O routines
" forthio.fr"		ftload

\ Libraries, etc.
" modules2.mfr"		used
" timers2a.fr"		used
" timers.mfr"		fload		\ local version: do: only
" far2.fr"		fload \ TBD: new version
" farallot2.fr"		used
" farallot2.mfr"	used
\ " farqueue2.fr"		used

\ General purpose
" extend-boot.fr"	fload
\ " extend-mro.fr"	used
\ " extend-mro.mfr"	used
\ " stubs.fr"		fload		\ emulate unused components
\ " outbits2a.fr"		used
\ " outbits2.mfr"		used

\ Global constants
" mro.fr"		used
" mro-boot.fr"		fload

\ Hardware interfaces and configuration/status data
\ " hw.fr"		used
" hw-ext.fr"		fload
" memory2.fr"		used
" farcopy.fr"		used

\ Alpha monitor (generic components)
" boot.fr"		used
" motor2.fr"		used
" alpha2.fr"		used

\ Load startup
" main.fr"		fload
" startup.fr"		ftload
ram-here dp !				\ unused memory for run-time allocation
' go is-startup

report
" newforth" saveobj
cr .( stack depth = ) depth . cr
decimal >log rulestats !>log
