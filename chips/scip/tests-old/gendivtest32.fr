decimal

: 2constant create , , does> 2@ ;

\ Useful constants
hex ffffffff constant maxuint
    80000000 constant miduint
    ffffffff fffffffe 2constant bigudint1
    00000000 80000000 2constant midudint
    ffffffff 40000000 2constant bigudint2
    00000000 00000001 2constant smalludint

    7fffffff constant maxint
    80000000 constant minint
decimal

\ Random number generator
variable rnd   ( here) 12345 rnd ! \ seed generator
: random                ( --- random# )
   rnd @ 31421 * 6927 + dup rnd ! ;

\ Test um/mod
: gentest-um/mod
   3 spaces 2pick u. over u. dup u. um/mod swap u. u. ." check-um/mod" cr ;

: simple-tests-um/mod
   16 0 do i 0 1 gentest-um/mod loop
   16 0 do i 0 2 gentest-um/mod loop
   16 0 do i 0 3 gentest-um/mod loop
;

: boundary-tests-um/mod
   bigudint1 maxuint gentest-um/mod
   midudint maxuint gentest-um/mod
   bigudint2 maxuint gentest-um/mod
   bigudint2 miduint gentest-um/mod
   smalludint maxuint gentest-um/mod
   smalludint miduint gentest-um/mod
   maxuint dup um* maxuint gentest-um/mod
;

: random-tests-um/mod
   16 0 do
      random random random
      2dup u< if gentest-um/mod else drop 2drop then
   loop
;

\ Test /mod
: gentest-/mod
   3 spaces over . dup . /mod swap . . ." check-/mod" cr ;

: simple-tests-/mod
   16 0 do i 1 gentest-/mod loop
   32 16 do i 16 gentest-/mod loop
   16 0 do i -1 gentest-/mod loop
   32 16 do i -16 gentest-/mod loop
   16 0 do i negate 1 gentest-/mod loop
   32 16 do i negate 16 gentest-/mod loop
   16 0 do i negate -1 gentest-/mod loop
   32 16 do i negate -16 gentest-/mod loop
;

: boundary-tests-/mod
   maxint 1 gentest-/mod
   minint 1 gentest-/mod
   maxint -1 gentest-/mod
   minint -1 gentest-/mod
   maxint maxint gentest-/mod
   minint maxint gentest-/mod
   maxint minint gentest-/mod
   minint minint gentest-/mod
;

: random-tests-/mod
   32 0 do random random gentest-/mod loop
;

: tester
." decimal" cr
." ( Generated by gendivtest.fr.  Do not edit.)" cr
." : d=" cr
."    rot = >r = r> and ;" cr
." : check-um/mod" cr
."    >r >r 2pick 2pick 2pick um/mod r> -rot r> -rot 3pick 3pick d=" cr
."    if 2drop drop 2drop" cr
."    else >r >r >r >r u. r> u. r> u. r> u. r> u. cr" cr
."    then ;" cr
." : check-/mod" cr
."    3pick 3pick /mod 3pick 3pick d=" cr
."    if 2drop 2drop" cr
."    else >r >r >r . r> . r> . r> . cr" cr
."    then ;" cr
;

: tests
   ." : test-um/mod" cr
   simple-tests-um/mod
   boundary-tests-um/mod
   random-tests-um/mod
   ." ;" cr

   ." : test-/mod" cr
   simple-tests-/mod
   boundary-tests-/mod
   random-tests-/mod
   ." ;" cr
;

tester tests
