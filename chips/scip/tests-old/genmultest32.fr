decimal

\ Useful constants
hex 7fffffff constant maxint
    80000000 constant minint
    ffffffff constant maxuint
decimal

\ Random number generator
variable rnd   ( here) 12345 rnd ! \ seed generator
: random                ( --- random# )
   rnd @ 31421 * 6927 + dup rnd ! ;

\ Test m*
: gentest-m*
   3 spaces over . dup . m* swap . . ." check-m*" cr ;

: simple-tests-m*
   16 0 do 1 i gentest-m* loop
   16 0 do i 1 gentest-m* loop
   16 0 do -1 i gentest-m* loop
   16 0 do i -1 gentest-m* loop
;

: boundary-tests-m*
   maxint 1 gentest-m*
   1 maxint gentest-m*
   minint 1 gentest-m*
   1 minint gentest-m*
   maxint maxint gentest-m*
   minint maxint gentest-m*
   maxint minint gentest-m*
   minint minint gentest-m*
;

: random-tests-m*
   16 0 do random        random        gentest-m* loop
   16 0 do random negate random        gentest-m* loop
   16 0 do random        random negate gentest-m* loop
   16 0 do random negate random negate gentest-m* loop
;

\ Test um*
: gentest-um*
   3 spaces over u. dup u. um* swap u. u. ." check-um*" cr ;

: simple-tests-um*
   16 0 do 1 i gentest-um* loop
   16 0 do i 1 gentest-um* loop
;

: boundary-tests-um*
   maxuint 1 gentest-um*
   1 maxuint gentest-um*
   maxuint maxuint gentest-um*
;

: random-tests-um*
   32 0 do random random gentest-um* loop
;

: tester
." ( Generated by genmultest.fr.  Do not edit)" cr
." decimal" cr
." : d=" cr
."    rot = >r = r> and ;" cr
." : check-m*" cr
."    3pick 3pick m* 3pick 3pick d=" cr
."    if 2drop 2drop" cr
."    else >r >r >r . r> . r> r> d. cr" cr
."    then ;" cr
." : check-um*" cr
."    3pick 3pick um* 3pick 3pick d=" cr
."    if 2drop 2drop" cr
."    else >r >r >r u. r> u. r> r> d. cr" cr
."    then ;" cr
;

: tests
   ." : test-m*" cr
   simple-tests-m*
   boundary-tests-m*
   random-tests-m*
   ." ;" cr

   ." : test-um*" cr
   simple-tests-um*
   boundary-tests-um*
   random-tests-um*
   ." ;" cr
;

tester tests
