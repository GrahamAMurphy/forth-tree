\ Cross compile Forth for 32-bit SCIP on Xilinx
" target.fr" used
" scip/32bits/amba/xilinx" is-target	\ cross compile for 32-bit Frisc5

\ Configure crosscompiler
hex
0 set-ram				\ ram-based system
\ 0 8000 set-rom/ram			\ rom-based system
def interactive
def multitasking			\ include multitasker
" xil32bootfor.map" is-logfile

\ Load the kernel.
" kernel1.fr" ftload			\ primitives and extend crosscompiler

\ Load board-specific code, e.g. tty code
" brdparam.fr" ftload			\ useful addresses, etc.
" intprims.fr" ftload			\ interrupt support
" intuser.mfr" ftload			\    and cross-compiler
\ " polltty.fr" ftload			\ polled tty driver
" devices/intttyws.fr" ftload		\ interrupt-driven tty driver
" uart.fr" ftload			\    and configration

\ Load the interpreter
" kernel2.fr" ftload			\ interpreter for Forth, processes, etc.

\ Load initialization stuff
" startup.fr" ftload			\ startup
' doforth is-startup			\ run Forth interpreter

\ Patch reset vector
\ ' reboot *callop* w0 forth @ host t-w!
" bootboot.fr" ftload

report
" xil32bootfor.mem" saveobj
cr .( stack depth = ) depth . cr
decimal >log rulestats !>log
