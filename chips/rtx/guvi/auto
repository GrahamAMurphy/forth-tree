#!/usr/local/bin/forth
\ Compile RTX Forth

" target.fr" used
" rtx/guvi" is-target			\ cross compile for GUVI DPU

\ Configure crosscompiler
hex
0000 set-ram				\ ram-based system
def interactive
" forguvi.map" is-logfile

\ RTX/DPU specific configuration
def rtx2010				\ expoit 2010 specific features
100 define substack-size		\ stack size: see ../chpparam.fr

\ Load the kernel
" kernel1.fr" ftload			\ primitives and extend crosscompiler

\ Load low-level tty code
" brdparam.fr" ftload			\ useful addresses and defines
noheads
" devices/intttypoll.fr" ftload		\ tty interface with polling
heads
" uart.fr" ftload			\ interrupt driven tty interface

\ Load rest of kernel and multitasker and interpreter if desired
" kernel2.fr" ftload			\ interpreter?, multitasker?

\ DPU specific
" dpuinit.fr" ftload			\ initialize registers, etc.

\ ------------------------------------------------------------------------
\ Load application

\ Forth is the application ...

\ Load initialization stuff
" startup.fr" ftload			\ start up
' doforth is-startup			\ run Forth interpreter

\ Note: this program is started from the boot ROM; the boot ROM initializes
\ some things, which the new program can inherit.

report

" forguvi" saveobj

cr .( stack depth = ) depth . cr

decimal >log rulestats !>log
